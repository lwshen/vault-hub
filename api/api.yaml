openapi: 3.0.0
info:
  version: 1.0.0
  title: Vault Hub Server
paths:
  /api/health:
    get:
      description: Check the health status of backend
      operationId: health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /api/auth/login:
    post:
      description: Login with email and password
      tags:
        - Auth
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        '200':
          description: Login successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /api/auth/signup:
    post:
      description: Sign up a new user
      tags:
        - Auth
      operationId: signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupRequest"
      responses:
        '200':
          description: Sign up successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
  /api/auth/logout:
    get:
      description: Logout
      tags:
        - Auth
      operationId: logout
      responses:
        '200':
          description: OK
  /api/user:
    get:
      description: Get current user by credential
      tags:
        - User
      operationId: getCurrentUser
      responses:
        '200':
          description: User Info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
  /api/vaults:
    get:
      description: Get all vaults for the current user
      tags:
        - Vault
      operationId: getVaults
      parameters:
        - name: category
          in: query
          description: Filter by category
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of vaults
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VaultLite'
    post:
      description: Create a new vault
      tags:
        - Vault
      operationId: createVault
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateVaultRequest"
      responses:
        '201':
          description: Vault created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
  /api/vaults/{unique_id}:
    get:
      description: Get a specific vault by Unique ID
      tags:
        - Vault
      operationId: getVault
      parameters:
        - name: unique_id
          in: path
          required: true
          description: Vault Unique ID
          schema:
            type: string
      responses:
        '200':
          description: Vault details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
    put:
      description: Update a vault
      tags:
        - Vault
      operationId: updateVault
      parameters:
        - name: unique_id
          in: path
          required: true
          description: Vault Unique ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateVaultRequest"
      responses:
        '200':
          description: Vault updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
    delete:
      description: Delete a vault
      tags:
        - Vault
      operationId: deleteVault
      parameters:
        - name: unique_id
          in: path
          required: true
          description: Vault Unique ID
          schema:
            type: string
      responses:
        '204':
          description: Vault deleted successfully

components:
  schemas:
    HealthCheckResponse:
      type: object
      properties:
        status:
          type: string
          example: "ok"
        timestamp:
          type: string
          format: date-time
          example: "2023-10-11T12:34:56Z"

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    LoginResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string

    SignupRequest:
      type: object
      required:
        - email
        - password
        - name
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        name:
          type: string

    SignupResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string

    GetUserResponse:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
        name:
          type: string
        avatar:
          type: string

    VaultLite:
      type: object
      required:
        - unique_id
        - name
      properties:
        unique_id:
          type: string
          description: Unique identifier for the vault
        name:
          type: string
          description: Human-readable name
        description:
          type: string
          description: Human-readable description
        category:
          type: string
          description: Category/type of vault
        updated_at:
          type: string
          format: date-time

    Vault:
      type: object
      required:
        - unique_id
        - name
        - value
      properties:
        unique_id:
          type: string
          description: Unique identifier for the vault
        user_id:
          type: integer
          format: int64
          description: ID of the user who owns this vault
        name:
          type: string
          description: Human-readable name
        value:
          type: string
          description: Encrypted value
        description:
          type: string
          description: Human-readable description
        category:
          type: string
          description: Category/type of vault
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateVaultRequest:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: Human-readable name
          minLength: 1
          maxLength: 255
        value:
          type: string
          description: Value to be encrypted and stored
          minLength: 1
        description:
          type: string
          description: Human-readable description
          maxLength: 500
        category:
          type: string
          description: Category/type of vault
          maxLength: 100

    UpdateVaultRequest:
      type: object
      properties:
        name:
          type: string
          description: Human-readable name
          minLength: 1
          maxLength: 255
        value:
          type: string
          description: Value to be encrypted and stored
          minLength: 1
        description:
          type: string
          description: Human-readable description
          maxLength: 500
        category:
          type: string
          description: Category/type of vault
          maxLength: 100
