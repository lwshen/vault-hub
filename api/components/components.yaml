components:
  schemas:
    HealthCheckResponse:
      type: object
      properties:
        status:
          type: string
          example: "ok"
        timestamp:
          type: string
          format: date-time
          example: "2023-10-11T12:34:56Z"

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    LoginResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string

    SignupRequest:
      type: object
      required:
        - email
        - password
        - name
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        name:
          type: string

    SignupResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string

    GetUserResponse:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
        name:
          type: string
        avatar:
          type: string

    VaultLite:
      type: object
      required:
        - uniqueId
        - name
      properties:
        uniqueId:
          type: string
          description: Unique identifier for the vault
        name:
          type: string
          description: Human-readable name
        description:
          type: string
          description: Human-readable description
        category:
          type: string
          description: Category/type of vault
        updatedAt:
          type: string
          format: date-time

    Vault:
      type: object
      required:
        - uniqueId
        - name
        - value
      properties:
        uniqueId:
          type: string
          description: Unique identifier for the vault
        userId:
          type: integer
          format: int64
          description: ID of the user who owns this vault
        name:
          type: string
          description: Human-readable name
        value:
          type: string
          description: Encrypted value
        description:
          type: string
          description: Human-readable description
        category:
          type: string
          description: Category/type of vault
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CreateVaultRequest:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: Human-readable name
          minLength: 1
          maxLength: 255
        value:
          type: string
          description: Value to be encrypted and stored
          minLength: 1
        description:
          type: string
          description: Human-readable description
          maxLength: 500
        category:
          type: string
          description: Category/type of vault
          maxLength: 100

    UpdateVaultRequest:
      type: object
      properties:
        name:
          type: string
          description: Human-readable name
          minLength: 1
          maxLength: 255
        value:
          type: string
          description: Value to be encrypted and stored
          minLength: 1
        description:
          type: string
          description: Human-readable description
          maxLength: 500
        category:
          type: string
          description: Category/type of vault
          maxLength: 100

    AuditLogsResponse:
      type: object
      required:
        - auditLogs
        - totalCount
        - pageSize
        - pageIndex
      properties:
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLog'
        totalCount:
          type: integer
          description: Total number of logs matching the filter criteria
        pageSize:
          type: integer
          description: Number of logs per page
        pageIndex:
          type: integer
          description: Current page index (starting from 0)

    APIKeysResponse:
      type: object
      required:
        - apiKeys
        - totalCount
        - pageSize
        - pageIndex
      properties:
        apiKeys:
          type: array
          items:
            $ref: '#/components/schemas/APIKey'
        totalCount:
          type: integer
          description: Total number of API keys
        pageSize:
          type: integer
          description: Number of API keys per page
        pageIndex:
          type: integer
          description: Current page index (starting from 1)

    AuditLog:
      type: object
      required:
        - createdAt
        - userId
        - action
      properties:
        createdAt:
          type: string
          format: date-time
          description: When the action occurred
        vault:
          $ref: '#/components/schemas/VaultLite'
        apiKey:
          $ref: '#/components/schemas/APIKey'
        action:
          type: string
          enum: [read_vault, update_vault, delete_vault, create_vault, login_user, register_user, logout_user, create_api_key, update_api_key, delete_api_key]
          description: Type of action performed
        ipAddress:
          type: string
          description: IP address from which the action was performed
        userAgent:
          type: string
          description: User agent string from the client

    APIKey:
      type: object
      required:
        - id
        - name
        - isActive
        - createdAt
      properties:
        id:
          type: integer
          format: int64
          description: Unique API key ID
        name:
          type: string
          description: Human-readable name for the API key
        vaults:
          type: array
          items:
            $ref: '#/components/schemas/VaultLite'
          description: Array of vaults this key can access (null/empty = all user's vaults)
        expiresAt:
          type: string
          format: date-time
          description: Optional expiration date
        lastUsedAt:
          type: string
          format: date-time
          description: When the key was last used
        isActive:
          type: boolean
          description: Whether the key is currently active
        createdAt:
          type: string
          format: date-time
          description: When the key was created
        updatedAt:
          type: string
          format: date-time
          description: When the key was last updated

    CreateAPIKeyRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Human-readable name for the API key
          minLength: 1
          maxLength: 255
        vaultUniqueIds:
          type: array
          items:
            type: string
          description: Array of vault unique IDs this key can access (empty = all user's vaults)
        expiresAt:
          type: string
          format: date-time
          description: Optional expiration date

    CreateAPIKeyResponse:
      type: object
      required:
        - apiKey
        - key
      properties:
        apiKey:
          $ref: '#/components/schemas/APIKey'
        key:
          type: string
          description: The generated API key (only shown once)

    UpdateAPIKeyRequest:
      type: object
      properties:
        name:
          type: string
          description: Human-readable name for the API key
          minLength: 1
          maxLength: 255
        vaultUniqueIds:
          type: array
          items:
            type: string
          description: Array of vault unique IDs this key can access (empty = all user's vaults)
        expiresAt:
          type: string
          format: date-time
          description: Optional expiration date
        isActive:
          type: boolean
          description: Enable or disable the API key