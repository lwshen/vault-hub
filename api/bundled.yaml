// Package apispec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package apispec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
