name: Build and Publish Go Client
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
      - name: Set env
        run: echo "TAG=v0.$(date +'%Y%m%d.%H%M%S')" >> "$GITHUB_ENV"
      - name: Generate Go Client Library
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: go
          openapi-file: packages/api/openapi/api.yaml
          generator-tag: v7.13.0
          command-args: --additional-properties=packageVersion=${{ env.TAG }} --additional-properties=moduleName=github.com/lwshen/vault-hub-go-client --git-user-id lwshen --git-repo-id vault-hub-go-client
      - name: Ensure LICENSE is included
        run: cp LICENSE go-client/LICENSE
      - name: Initialize Go module and publish
        run: |
          # Prepare generated client
          cd go-client
          go mod tidy
          cd ..

          # Configure git identity
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Clone existing repository to preserve history
          git clone https://${{ secrets.PUBLISH_TOKEN }}@github.com/lwshen/vault-hub-go-client.git publish-repo
          cd publish-repo

          # Ensure we are on main (create if missing)
          git checkout -B main || git checkout -b main

          # Replace repository contents (except .git) with newly generated client
          find . -mindepth 1 -maxdepth 1 ! -name ".git" -exec rm -rf {} +
          cp -R ../go-client/. .

          # Commit changes only if there are modifications
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Generated Go client library ${{ env.TAG }}"
          fi

          # Tag the release
          git tag ${{ env.TAG }}

          # Push to separate repository only outside of pull_request events
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            git push origin main
            git push origin ${{ env.TAG }}
          else
            echo "Skipping push during pull_request event"
          fi
      - name: Upload OpenAPI client artifact
        uses: actions/upload-artifact@v4
        with:
          name: go-client
          path: go-client
          if-no-files-found: error
