name: Publish Docker image
on:
  workflow_dispatch:
  push:
jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/lwshen/vault-hub
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Get version info
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo 'dev')
          fi
          COMMIT=${GITHUB_SHA::7}
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "COMMIT=${COMMIT}" >> $GITHUB_OUTPUT
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.version.outputs.VERSION }}
            COMMIT=${{ steps.version.outputs.COMMIT }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true
      - name: Test version in Docker image
        run: |
          # Get the first tag for testing
          TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          echo "Testing version in image: $TAG"
          
          # Test that the version command works and shows expected version/commit
          docker run --rm "$TAG" ./vault-hub-server --version
          
          # Verify the version output contains our expected values
          VERSION_OUTPUT=$(docker run --rm "$TAG" ./vault-hub-server --version)
          echo "Version output: $VERSION_OUTPUT"
          
          if [[ "$VERSION_OUTPUT" == *"${{ steps.version.outputs.VERSION }}"* ]]; then
            echo "✓ Version matches: ${{ steps.version.outputs.VERSION }}"
          else
            echo "✗ Version mismatch. Expected: ${{ steps.version.outputs.VERSION }}"
            exit 1
          fi
          
          if [[ "$VERSION_OUTPUT" == *"${{ steps.version.outputs.COMMIT }}"* ]]; then
            echo "✓ Commit matches: ${{ steps.version.outputs.COMMIT }}"
          else
            echo "✗ Commit mismatch. Expected: ${{ steps.version.outputs.COMMIT }}"
            exit 1
          fi
